(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[8],{

/***/ "./writings/how-to-useeffect.md":
/*!**************************************!*\
  !*** ./writings/how-to-useeffect.md ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("---\ntitle: \"How to useEffect, simplified.\"\ndate: \"2020-08-28\"\nog:\n  description: \"How to useEffect, a simplified guide.\"\n  image: \"https://telmo.im/og/howtouseeffect.png\"\nauthor:\n  twitter: \"telmo\"\n  name: \"Telmo Goncalves\"\n---\n\nAlright, I've wrote about `useState` in the past, I thought about giving it a go with `useEffect`.\n\nIf youâ€™re familiar with React class lifecycle methods, you can think of `useEffect` hook\nas `componentDidMount`, `componentDidUpdate`, and `componentWillUnmount` combined.\n\n---\n\nIf you want to run your code once when the component mounts we can do:\n\n```js\nuseEffect(() => {\n  // Your code\n}, [])\n```\n\nBy using `[]` we're _telling_ the code inside `useEffect` to run only once.\n\n---\n\nWhat about if we want to run the code on every render of the component? **Careful** that\nthis can be tricky and I don't really advice using it.\n\n```js\nuseEffect(() => {\n  // Your code\n})\n```\n\nNotice that we removed the `[]`, this way our code will run every render.\n\n---\n\n## useState & useEffect\n\nLet us combine both `useState` and `useEffect`:\n\n```js\n// Here we are setting the `online` state to false\nconst [online, setOnline] = useState(false)\n```\n\nBuild a button to trigger a change on the `online` state:\n\n```html\n<button onClick={() => setOnline(!online)}>\n  Change status\n</button>\n```\n\nNow let us say that we want to trigger a simple `console.log` whenever\nthe state `online` changes, we can use `useEffect` for that:\n\n```js\nuseEffect(() => {\n  if (online) {\n    console.log('User is now online!')\n  } else {\n    console.log('User is now offline!')\n  }\n}, [online])\n```\n\nBy using `online` inside `[]`, the code inside `useEffect` will run every\nsingle time there's a change of the `online` state.\n\n---\n\nThis is a pretty simple explanation of how `useEffect` works. If you want to play with\nthis code just check this [codesandbox](https://codesandbox.io/s/priceless-dijkstra-xs058).\n");

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vd3JpdGluZ3MvaG93LXRvLXVzZWVmZmVjdC5tZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBZSwyckJBQTRuQixtQkFBbUIsZ1JBQWdSLG1CQUFtQixrWEFBa1gseUJBQXlCLHNNQUFzTSxpQkFBaUIsNkNBQTZDLE9BQU8sOENBQThDLEdBQUcsbVZBQW1WLEUiLCJmaWxlIjoic3RhdGljL2NodW5rcy84LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCItLS1cXG50aXRsZTogXFxcIkhvdyB0byB1c2VFZmZlY3QsIHNpbXBsaWZpZWQuXFxcIlxcbmRhdGU6IFxcXCIyMDIwLTA4LTI4XFxcIlxcbm9nOlxcbiAgZGVzY3JpcHRpb246IFxcXCJIb3cgdG8gdXNlRWZmZWN0LCBhIHNpbXBsaWZpZWQgZ3VpZGUuXFxcIlxcbiAgaW1hZ2U6IFxcXCJodHRwczovL3RlbG1vLmltL29nL2hvd3RvdXNlZWZmZWN0LnBuZ1xcXCJcXG5hdXRob3I6XFxuICB0d2l0dGVyOiBcXFwidGVsbW9cXFwiXFxuICBuYW1lOiBcXFwiVGVsbW8gR29uY2FsdmVzXFxcIlxcbi0tLVxcblxcbkFscmlnaHQsIEkndmUgd3JvdGUgYWJvdXQgYHVzZVN0YXRlYCBpbiB0aGUgcGFzdCwgSSB0aG91Z2h0IGFib3V0IGdpdmluZyBpdCBhIGdvIHdpdGggYHVzZUVmZmVjdGAuXFxuXFxuSWYgeW914oCZcmUgZmFtaWxpYXIgd2l0aCBSZWFjdCBjbGFzcyBsaWZlY3ljbGUgbWV0aG9kcywgeW91IGNhbiB0aGluayBvZiBgdXNlRWZmZWN0YCBob29rXFxuYXMgYGNvbXBvbmVudERpZE1vdW50YCwgYGNvbXBvbmVudERpZFVwZGF0ZWAsIGFuZCBgY29tcG9uZW50V2lsbFVubW91bnRgIGNvbWJpbmVkLlxcblxcbi0tLVxcblxcbklmIHlvdSB3YW50IHRvIHJ1biB5b3VyIGNvZGUgb25jZSB3aGVuIHRoZSBjb21wb25lbnQgbW91bnRzIHdlIGNhbiBkbzpcXG5cXG5gYGBqc1xcbnVzZUVmZmVjdCgoKSA9PiB7XFxuICAvLyBZb3VyIGNvZGVcXG59LCBbXSlcXG5gYGBcXG5cXG5CeSB1c2luZyBgW11gIHdlJ3JlIF90ZWxsaW5nXyB0aGUgY29kZSBpbnNpZGUgYHVzZUVmZmVjdGAgdG8gcnVuIG9ubHkgb25jZS5cXG5cXG4tLS1cXG5cXG5XaGF0IGFib3V0IGlmIHdlIHdhbnQgdG8gcnVuIHRoZSBjb2RlIG9uIGV2ZXJ5IHJlbmRlciBvZiB0aGUgY29tcG9uZW50PyAqKkNhcmVmdWwqKiB0aGF0XFxudGhpcyBjYW4gYmUgdHJpY2t5IGFuZCBJIGRvbid0IHJlYWxseSBhZHZpY2UgdXNpbmcgaXQuXFxuXFxuYGBganNcXG51c2VFZmZlY3QoKCkgPT4ge1xcbiAgLy8gWW91ciBjb2RlXFxufSlcXG5gYGBcXG5cXG5Ob3RpY2UgdGhhdCB3ZSByZW1vdmVkIHRoZSBgW11gLCB0aGlzIHdheSBvdXIgY29kZSB3aWxsIHJ1biBldmVyeSByZW5kZXIuXFxuXFxuLS0tXFxuXFxuIyMgdXNlU3RhdGUgJiB1c2VFZmZlY3RcXG5cXG5MZXQgdXMgY29tYmluZSBib3RoIGB1c2VTdGF0ZWAgYW5kIGB1c2VFZmZlY3RgOlxcblxcbmBgYGpzXFxuLy8gSGVyZSB3ZSBhcmUgc2V0dGluZyB0aGUgYG9ubGluZWAgc3RhdGUgdG8gZmFsc2VcXG5jb25zdCBbb25saW5lLCBzZXRPbmxpbmVdID0gdXNlU3RhdGUoZmFsc2UpXFxuYGBgXFxuXFxuQnVpbGQgYSBidXR0b24gdG8gdHJpZ2dlciBhIGNoYW5nZSBvbiB0aGUgYG9ubGluZWAgc3RhdGU6XFxuXFxuYGBgaHRtbFxcbjxidXR0b24gb25DbGljaz17KCkgPT4gc2V0T25saW5lKCFvbmxpbmUpfT5cXG4gIENoYW5nZSBzdGF0dXNcXG48L2J1dHRvbj5cXG5gYGBcXG5cXG5Ob3cgbGV0IHVzIHNheSB0aGF0IHdlIHdhbnQgdG8gdHJpZ2dlciBhIHNpbXBsZSBgY29uc29sZS5sb2dgIHdoZW5ldmVyXFxudGhlIHN0YXRlIGBvbmxpbmVgIGNoYW5nZXMsIHdlIGNhbiB1c2UgYHVzZUVmZmVjdGAgZm9yIHRoYXQ6XFxuXFxuYGBganNcXG51c2VFZmZlY3QoKCkgPT4ge1xcbiAgaWYgKG9ubGluZSkge1xcbiAgICBjb25zb2xlLmxvZygnVXNlciBpcyBub3cgb25saW5lIScpXFxuICB9IGVsc2Uge1xcbiAgICBjb25zb2xlLmxvZygnVXNlciBpcyBub3cgb2ZmbGluZSEnKVxcbiAgfVxcbn0sIFtvbmxpbmVdKVxcbmBgYFxcblxcbkJ5IHVzaW5nIGBvbmxpbmVgIGluc2lkZSBgW11gLCB0aGUgY29kZSBpbnNpZGUgYHVzZUVmZmVjdGAgd2lsbCBydW4gZXZlcnlcXG5zaW5nbGUgdGltZSB0aGVyZSdzIGEgY2hhbmdlIG9mIHRoZSBgb25saW5lYCBzdGF0ZS5cXG5cXG4tLS1cXG5cXG5UaGlzIGlzIGEgcHJldHR5IHNpbXBsZSBleHBsYW5hdGlvbiBvZiBob3cgYHVzZUVmZmVjdGAgd29ya3MuIElmIHlvdSB3YW50IHRvIHBsYXkgd2l0aFxcbnRoaXMgY29kZSBqdXN0IGNoZWNrIHRoaXMgW2NvZGVzYW5kYm94XShodHRwczovL2NvZGVzYW5kYm94LmlvL3MvcHJpY2VsZXNzLWRpamtzdHJhLXhzMDU4KS5cXG5cIjsiXSwic291cmNlUm9vdCI6IiJ9